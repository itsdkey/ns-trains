version: "3"
services:

  redis:
    container_name: "ns-broker"
    image: "redis:7-alpine"
    ports:
      - "6379:6379"

  trains1:
    build:
      context: trains
      dockerfile: "./Dockerfile"
    container_name: "ns-trains-1"
    depends_on:
      - redis
    env_file: .env
    environment:
      TRAIN_ID: train1
    volumes:
      - "./trains/:/app"

  trains2:
    build:
      context: trains
      dockerfile: "./Dockerfile"
    container_name: "ns-trains-2"
    depends_on:
      - redis
    env_file: .env
    environment:
      TRAIN_ID: train2
    volumes:
      - "./trains/:/app"

  headquarters:
    build:
      context: headquarters
      dockerfile: "./Dockerfile"
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
    depends_on:
      - redis
    env_file: .env
    volumes:
      - "./headquarters/:/app"

  # this is needed to mimic load-balancing to our linemen service replicas
  proxy:
    image: nginx:1.25-alpine
    volumes:
      - "./proxy/nginx.conf:/etc/nginx/nginx.conf:ro"
    depends_on:
      - linemen
    ports:
      - "4000:4000"

  linemen:
    build:
      context: linemen
      dockerfile: "./Dockerfile"
    command: ["local_entrypoint.sh"]
    depends_on:
      - db
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
    env_file: .env
    ports:
      - "8000"
    volumes:
      - "./linemen/:/app"

  migration:
    build:
      context: linemen
      dockerfile: "./Dockerfile"
    command: ["bash", "init_db.sh"]
    container_name: "ns-linemen-migration"
    depends_on:
      - db
    env_file: .env

  db:
    container_name: "ns-linemen-db"
    env_file: .env
    image: "postgres:16.1-alpine"
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  wdb:
    image: "kozea/wdb:3.3.0"
    container_name: "ns-wdb"
    deploy:
      resources:
        limits:
          memory: 1gb
    ports:
      - "1984:1984"

volumes:
  db-data:
